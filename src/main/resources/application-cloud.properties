# Cloud Environment Configuration

# Client Configuration (will be overridden by environment variables in K8s)
client.origin=${CLIENT_ORIGIN:https://amcart-nagarro.c-418bb73.kyma.ondemand.com}

# MongoDB Configuration (should be set via environment variables in production)
spring.data.mongodb.uri=${MONGODB_URI:mongodb+srv://abhinavs175:0TGaZJ9eU1sae6lQ@cluster0.ix4px.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0}
spring.data.mongodb.database=${MONGODB_DATABASE:nagp-amcart}
spring.data.mongodb.auto-index-creation=true

# AWS Cognito Configuration
aws.region=${AWS_REGION:us-east-2}
aws.cognito.userPoolId=${COGNITO_USER_POOL_ID:us-east-2_EB9d7nP5j}
aws.cognito.clientId=${COGNITO_CLIENT_ID:30ik4vbmia1l63q3h1am8mpnhq}
aws.cognito.jwkUrl=https://cognito-idp.${aws.region}.amazonaws.com/${aws.cognito.userPoolId}/.well-known/jwks.json

# ElasticSearch Configuration
# elasticsearch.host=${ELASTICSEARCH_HOST:quickstart-es-http.elastic-system.svc.cluster.local}
# elasticsearch.port=${ELASTICSEARCH_PORT:9200}
# elasticsearch.username=${ELASTICSEARCH_USERNAME:elastic}
# elasticsearch.password=${ELASTICSEARCH_PASSWORD:2iZ5k6eF839j3X5Cu8Ucp2OC}
elasticsearch.host=10.110.196.227
elasticsearch.port=9200
spring.data.elasticsearch.cluster-name=docker-cluster
spring.data.elasticsearch.repositories.enabled=true
spring.elasticsearch.rest.uris=http://10.110.196.227:9200
spring.data.elasticsearch.client.reactive.endpoints=10.110.196.227:9200

# Logging Configuration (less verbose for production)
logging.level.org.springframework.data.mongodb=INFO
logging.level.org.springframework.data.elasticsearch=INFO
logging.level.com.nagarro.amcart=INFO